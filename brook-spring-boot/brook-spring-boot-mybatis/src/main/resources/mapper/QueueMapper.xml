<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.mytang0.brook.spring.boot.mybatis.mapper.QueueMapper">
    <insert id="insert" parameterType="xyz.mytang0.brook.spring.boot.mybatis.entity.QueueMessage">
        INSERT IGNORE INTO ${queueTableName}(`queue_name`,`message_id`,`priority`,`delivery_time`,`payload`) VALUES (#{queueName},#{messageId},#{priority},#{deliveryTime},#{payload})
    </insert>

    <insert id="inserts" parameterType="java.util.List">
        INSERT IGNORE INTO ${queueTableName}(`queue_name`,`message_id`,`priority`,`delivery_time`,`payload`) VALUES
        <foreach collection="list" item="message" separator=",">
            (#{message.queueName},#{message.messageId},#{message.priority},#{message.deliveryTime},#{message.payload})
        </foreach>
    </insert>

    <select id="recent" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT MIN(`delivery_time`) FROM ${queueTableName} WHERE `queue_name`=#{queueName}
    </select>

    <update id="update" parameterType="xyz.mytang0.brook.spring.boot.mybatis.entity.QueueMessage">
        UPDATE ${queueTableName} SET `priority`=#{priority},`delivery_time`=#{deliveryTime},`payload`=#{payload} WHERE `queue_name`=#{queueName} AND `message_id`=#{messageId}
    </update>

    <delete id="delete" parameterType="java.util.Map">
        DELETE FROM ${queueTableName} WHERE `queue_name`=#{queueName} AND `message_id`=#{messageId}
    </delete>

    <delete id="deletes" parameterType="java.util.Map">
        DELETE FROM ${queueTableName} WHERE `queue_name`=#{queueName} AND `message_id` IN
        <foreach collection="messageIds" item="messageId" separator="," open="(" close=")">
            #{messageId}
        </foreach>
    </delete>

    <select id="poll" parameterType="java.util.Map" resultType="xyz.mytang0.brook.spring.boot.mybatis.entity.QueueMessage">
        SELECT `queue_name`,`message_id`,`priority`,`delivery_time`,`payload` FROM ${queueTableName} WHERE `queue_name`=#{queueName} AND `delivery_time`&lt;=#{deliveryTime} AND `popped`=0 ORDER BY `delivery_time` LIMIT #{maxCount}
    </select>

    <update id="popped" parameterType="java.util.Map">
        UPDATE ${queueTableName} SET `popped`=1 WHERE `queue_name`=#{queueName} AND `message_id` IN
        <foreach collection="messageIds" item="messageId" separator="," open="(" close=")">
             #{messageId}
        </foreach>
    </update>

    <update id="unacked" parameterType="java.util.Map">
        UPDATE ${queueTableName} SET `popped`=0 WHERE `queue_name`=#{queueName} AND `delivery_time`&lt;=#{timePoint} AND `popped`=1
    </update>
</mapper>
